import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(
    home: SafeArea(child: Scaffold(
      body: QuizPage(),
    )),
  ));
}
class Question {
  final String questionText;
  final bool answer;
  Question({required this.questionText,required this.answer});
}
class Questions {
  List<Question> questionBank= [
    Question(questionText: "Indian side of cricket was captained by msd", answer: true),
    Question(questionText: "sita is wife of ram", answer: true),
    Question(questionText: "Colleges are still conducted in online mode", answer: false),
    Question(questionText: "Kohli is goat", answer: true),
    Question(questionText: "2019 world cup was won by Sri Lanka", answer: false),
    Question(questionText: "RCB is the best cricketing side in IPL", answer: true),
    Question(questionText: "2011 World Cup was won by India", answer: true),
  ];
}
class QuizPage extends StatefulWidget {
  const QuizPage({Key? key}) : super(key: key);
  @override
  State<QuizPage> createState() => _QuizPageState();
}
class _QuizPageState extends State<QuizPage> {
  int questionNumber=0;
  int currentScore=0;
  Questions questions=Questions();
  void updateQuesNum(){
    setState(() {
      questionNumber=questionNumber+1;
      print('$questionNumber');
    });
  }
  void udpateCurrentScore(bool choice, int question_number) {

    if (questions.questionBank.length == question_number) {
      print("End of questions");
    } else {

      if (questions.questionBank[question_number].answer == choice) {
        setState(() {
          currentScore++;
        });
      } }
  }
  bool checkquestionNumber(int questionNumber) {
    return questionNumber < questions.questionBank.length ? true : false;
  }
  @override
  Widget build(BuildContext context) {
    return Container(
      child: Column(
        children: [
          Center(
            child: Text(checkquestionNumber(questionNumber)?
            questions.questionBank[questionNumber].questionText.toString():"End",
              style: TextStyle(fontSize: 40.0),
            ),
          ),
          SizedBox(height: 20.0,),
          if (checkquestionNumber(questionNumber))
            ElevatedButton(onPressed: (){
              setState(() {
                if(questionNumber == questions.questionBank.length) {
                  print("End of questions");
                }else
                {
                  udpateCurrentScore(true, questionNumber);
                  updateQuesNum();
                }
              });
            },
              child: Text('True'),
            ),
          SizedBox(height: 20.0,),
          if (checkquestionNumber(questionNumber))
            ElevatedButton(onPressed: (){
              setState(() {
                if(questionNumber == questions.questionBank.length) {
                  print("End of questions");
                }else
                {
                  udpateCurrentScore(false, questionNumber);
                  updateQuesNum();
                }
              });
            },
              child: Text('False'),
            ),
          SizedBox(
            height: 100.0,
          ), SizedBox(
            height: 50.0,
          ),
          Padding(
            padding: const EdgeInsets.all(30.0),
            child: Center(
              child: Text(
                "Current Score is:",
                style: TextStyle(fontSize: 30),
              ), ),
          ), Padding(
            padding: const EdgeInsets.all(30.0),
            child: Center(
              child: Text(
                '${currentScore}',
                style: TextStyle(fontSize: 30),
              ), ),
          ),
        ],
      ),
    );
  }
}

